- name: "Ensure .ssh directory exists"
  file:
    path: "{{ postgresql_user_home }}/.ssh"
    state: directory
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: '700'

- name: "Copy id_rsa_pgpool to hosts"
  copy:
    src: id_rsa_pgpool
    dest: "{{ item }}"
    force: yes
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: '600'
  with_items:
    - "/root/.ssh/"
    - "{{ postgresql_user_home }}/.ssh/"

- name: "check authorize_keys exist"
  stat:
    path: "{{ postgresql_user_home }}/.ssh/authorized_keys"
  register: authorized_keys

- name: "Ensure .ssh/authorized_keys file exists"
  file:
    path: "{{ postgresql_user_home }}/.ssh/authorized_keys"
    state: touch
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    force: yes
    mode: '600'
  when: authorized_keys.stat.exists is defined and not authorized_keys.stat.exists

- name: "Add ssh public keys to each postgresql nodes"
  lineinfile:
    line: "{{ lookup('file', 'id_rsa_pgpool.pub') }}"
    dest: "{{ item }}"
  with_items:
    - "{{ postgresql_user_home }}/.ssh/authorized_keys"